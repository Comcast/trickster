apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "trickster.fullname" . }}
  labels:
    app: {{ template "trickster.name" . }}
    chart: {{ template "trickster.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  trickster.conf: |-
    [main]
    [proxy_server]
    listen_port = {{ .Values.service.port }}
    {{- if .Values.listenAddress }}
    listen_address = {{ .Values.listenAddress | quote }}
    {{- end }}

      {{- range .Values.caches }}
        {{ printf "[caches.%s]" .name }}
        type = {{ .type | quote }}
        compression = {{ .compression }}
        timeseries_ttl_secs = {{ .timeSeriesTTLSecs }}
        fastforward_ttl_secs = {{ .fastforwardTTLSecs }}
        object_ttl_secs = {{ .objectTTLSecs }}

            {{- if or (ne .type "redis") (ne .type "redis_cluster") }}
            {{ printf "[caches.%s.index]" .name }}
            reap_interval_secs = {{ .index.reapIntervalSecs }}
            flush_interval_secs = {{ .index.flushIntervalSecs }}
            max_size_bytes = {{ .index.maxSizeBytes }}
            max_size_backoff_bytes = {{ .index.maxSizeBackoffBytes }}
            max_size_objects = {{ .index.maxSizeObjects }}
            max_size_backoff_objects = {{ .index.maxSizeBackoffObjects }}
            {{- end }}


            {{- if eq .type "redis" }}
            {{ printf "[caches.%s.redis]" .name }}
            client_type = {{ .redis.clientType | quote }}
            protocol = {{ .redis.protocol | quote }}
            password = {{ .redis.password | quote }}

            {{- else if eq .redis.clientType "standard" }}
            endpoint = {{ .redis.endpoint | quote }}

            {{- else if or (eq .clientType "cluster") (eq .clientType "sentinel") }}
            endpoints = {{ .redis.endpoints }}
            {{- if eq .clientType "sentinel" }} 
            sentinel_master = {{ .redis.sentinelMaster | quote }}
            {{- end }}

            {{- if .redis.db }}
            db = {{ .redis.db }}
            {{- end }}
            {{- if .redis.maxRetries }}
            max_retries = {{ .redis.maxRetries }}
            {{- end }}
            {{- if .redis.minRetryBackoffMs }}
            min_retry_backoff_ms = {{ .redis.minRetryBackoffMs }}
            {{- end }}
            {{- if .redis.maxRetyBackoffMs }}
            max_retry_backoff_ms = {{ .redis.maxRetyBackoffMs }}
            {{- end }}
            {{- if .redis.dialTimeoutMs }}
            dial_timeout_ms = {{ .redis.dialTimeoutMs }}
            {{- end }}
            {{- if .redis.readTimeoutMs }}
            read_timeout_ms = {{ .redis.readTimeoutMs }}
            {{- end }}
            {{- if .redis.writeTimeoutMs }}
            write_timeout_ms = {{ .redis.writeTimeoutMs }}
            {{- end }}
            {{- if .redis.poolSize }}
            pool_size = {{ .redis.poolSize }}
            {{- end }}
            {{- if .redis.minIdleConns }}
            min_idle_conns = {{ .redis.minIdleConns }}
            {{- end }}
            {{- if .redis.maxConnAgeMs }}
            max_conn_age_ms = {{ .redis.maxConnAgeMs }}
            {{- end }}
            {{- if .redis.poolTimeoutMs }}
            pool_timeout_ms = {{ .redis.poolTimeoutMs }}
            {{- end }}
            {{- if .redis.idleTimeoutMs }}
            idle_timeout_ms = {{ .redis.idleTimeoutMs }}
            {{- end }}
            {{- if .redis.idleCheckFrequencyMs }}
            idle_check_frequency_ms = {{ .redis.idleCheckFrequencyMs }}
            {{- end }}
            
            {{- else if eq .type "filesystem" }}
            {{ printf "[caches.%s.filesystem]" .name }}
            cache_path = {{ .filesystem.path | quote }}

            {{- else if eq .type "bbolt" }}
            {{ printf "[caches.%s.bbolt]" .name }}
            filename = {{ .bbolt.file | quote }}
            bucket = {{ .bbolt.bucket | quote }}

            {{- else if eq .type "badger" }}
            {{ printf "[caches.%s.badger]" .name }}
            directory = {{ .badger.directory | quote }}
            value_directory = {{ .badger.valueDirectory | quote }}
           {{- end }}
      {{- end }}

    [origins]
    {{- range .Values.origins }}
        {{ printf "[origins.%s]" .name }}
        is_default = {{ .isDefault }}
        type = {{ .type | quote }}
        cache_name = {{ .name | quote }}
        scheme = {{ .scheme | quote }}
        host = {{ .host | quote }}
        path_prefix = {{ .pathPrefix | quote }}
        timeout_secs = {{ .timeoutSecs }}
        keep_alive_timeout_secs = {{ .keepAliveYimeoutSecs }}
        max_idle_conns = {{ .maxIdleConns }}
        api_path = {{ .apiPath | quote }}
        ignore_no_cache_header = {{ .ignoreNoCacheHeader }}
        timeseries_retention_factor = {{ .timeseriesRetentionFactor }}
        timeseries_eviction_method = {{ .timeseriesEvictionMethod | quote}}
        fast_forward_disable = {{ .fastForwardDisable }}
        backfill_tolerance_secs = {{ .backfillToleranceSecs }}
    {{- end }}

    [metrics]
        listen_port = {{ .Values.service.metricsPort }}
        
    [logging]
        log_level = {{ .Values.logLevel | quote }}
        {{- if .Values.logFile }}
        log_file = {{ .Values.logFile | quote }}
        {{- end }}
        